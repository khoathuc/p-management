generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrganizationRole {
  Member
  Owner
  Admin
}

model User {
  id String @id @default(cuid())

  username String @unique
  email    String @unique

  password String?
  status   Int

  firstName             String?
  lastName              String?
  avatar                String?
  currentOrganizationId String?
  emailVerified         Boolean @default(false)

  //data
  data Json?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id     String  @id @default(cuid())
  userId String
  name   String  @unique
  logo   String?

  members String[]
  owners  String[]
  admins  String[]

  //data
  data Json?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrganizationFollowing {
  id   String           @id @default(cuid())
  role OrganizationRole @default(Member)

  objectId String
  userId   String

  name String
  logo String

  creating  Boolean
  ownering  Boolean
  is_admin  Boolean
  is_member Boolean

  //data
  data Json?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Invitation {
  id String @id @default(cuid())

  userId         String
  organizationId String

  role           OrganizationRole @default(Member)
  email          String
  inviteAccepted Boolean?         @default(false)
  token          String?

  //data
  data Json?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([organizationId])
}

model VerifyToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  //data
  data Json?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([identifier, token])
}